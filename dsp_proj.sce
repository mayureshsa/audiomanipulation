// This GUI file is generated by guibuilder version 3.0
//////////
//setting stacksize to maximum to avoid memory issues
stacksize(268435455);

//f=figure('figure_position',[400,50],'figure_size',[656,582],'auto_resize','on','background',[33],'figure_name','Graphic window number %d');
//////////
//reading the .wav audio files into variables
drums=wavread('C:\Users\May\Desktop\DSP\drums.wav');
guitar=wavread('C:\Users\May\Desktop\DSP\guitar.wav');
bass=wavread('C:\Users\May\Desktop\DSP\bass.wav');
//slicing the .wav files at particular frequency 44100 Hz for a time interval of 10sec
drum_seg = drums(44100*10 : 44100*20);
guitar_seg = guitar(44100*10 : 44100*20);
bass_seg = bass(44100*10 : 44100*20);

ramp = 0 : 1/(44100*6.5) :1;

N = length(ramp);

//GUI creation
f=figure('figure_position',[400,50],'figure_size',[656,582],'auto_resize','on','background',[33],'figure_name','Graphic window number %d');
delmenu(f.figure_id,gettext('File'))
delmenu(f.figure_id,gettext('?'))
delmenu(f.figure_id,gettext('Tools'))
toolbar(f.figure_id,'off')
handles.dummy = 0;
handles.pb_drum=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1015625,0.8,0.1484375,0.1579167],'Relief','default','SliderStep',[0.01,0.1],'String','Drum','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_drum','Callback','pb_drum_callback(handles)')
handles.pb_guitar=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.256875,0.8,0.143125,0.1520833],'Relief','default','SliderStep',[0.01,0.1],'String','Guitar','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_guitar','Callback','pb_guitar_callback(handles)')
handles.pb_bass=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.401875,0.6220833,0.153125,0.3316667],'Relief','default','SliderStep',[0.01,0.1],'String','Bass','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_bass','Callback','pb_bass_callback(handles)')
handles.pb_mix=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1015625,0.6220833,0.2953125,0.1758333],'Relief','default','SliderStep',[0.01,0.1],'String','Drum & Guitar','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_mix','Callback','pb_mix_callback(handles)')
handles.pb_mix2=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1,0.43125,0.4546875,0.1866667],'Relief','default','SliderStep',[0.01,0.1],'String','Drum & Guitar with Bass','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_mix2','Callback','pb_mix2_callback(handles)')
handles.pb_mix3=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.1,0.235,0.4515625,0.1858333],'Relief','default','SliderStep',[0.01,0.1],'String','Drum & Guitar with extra Bass','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_mix3','Callback','pb_mix3_callback(handles)')
handles.pb_drumplot=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.595,0.8870833,0.1575,0.0625],'Relief','default','SliderStep',[0.01,0.1],'String','Plot Drum','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_drumplot','Callback','pb_drumplot_callback(handles)')
handles.pb_guitarplot=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.7625,0.885,0.1459375,0.0604167],'Relief','default','SliderStep',[0.01,0.1],'String','Plot Guitar','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_guitarplot','Callback','pb_guitarplot_callback(handles)')
handles.pb_plot= newaxes();handles.pb_plot.margins = [ 0 0 0 0];handles.pb_plot.axes_bounds = [0.5978125,0.1233333,0.3,0.3791667];
handles.pb_druminc=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.599375,0.3704167,0.3,0.1083333],'Relief','default','SliderStep',[0.01,0.1],'String','Increasing Drum','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_druminc','Callback','pb_druminc_callback(handles)')
handles.pb_guitarinc=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.6,0.2479167,0.3021875,0.1183333],'Relief','default','SliderStep',[0.01,0.1],'String','Increasing Guitar','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','pb_guitarinc','Callback','pb_guitarinc_callback(handles)')


//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////
function pb_drumplot_callback(handles)
//Write your callback for  pb_drumplot  here
plot(drum_seg);
endfunction


function pb_guitarplot_callback(handles)
//Write your callback for  pb_guitarplot  here
plot(guitar_seg,'r');
endfunction



function pb_drum_callback(handles)
//Write your callback for  pb_drum  here
sound(drum_seg,44100);
endfunction


function pb_guitar_callback(handles)
//Write your callback for  pb_guitar  here
sound(guitar_seg,44100);
endfunction


function pb_bass_callback(handles)
//Write your callback for  pb_bass  here
sound(bass_seg,44100);
endfunction


function pb_mix_callback(handles)
//Write your callback for  pb_mix  here
drum_guitar = drum_seg + guitar_seg;
sound(drum_guitar,44100);
endfunction


function pb_mix2_callback(handles)
//Write your callback for  pb_mix2  here
drum_guitar_bass = drum_seg + guitar_seg + bass_seg;
sound(drum_guitar_bass,44100);
endfunction


function pb_mix3_callback(handles)
//Write your callback for  pb_mix3  here
bass_seg = bass_seg*3;
guitar_seg = guitar_seg * 0.5;
drum_guitar_extra_bass = drum_seg + guitar_seg + bass_seg;

sound(drum_guitar_extra_bass,44100);
endfunction


function pb_druminc_callback(handles)
//Write your callback for  pb_druminc  here
drum_seg(1:N) = drum_seg(1:N).*ramp;
druminc_guitar = drum_seg(1:N) + guitar_seg(1:N);
sound(druminc_guitar,44100);
endfunction


function pb_guitarinc_callback(handles)
//Write your callback for  pb_guitarinc  here
guitar_seg(1:N) = guitar_seg(1:N).*ramp;
drum_seg = drum_seg*0.75;
drum_guitarinc = drum_seg(1:N) + guitar_seg(1:N);
sound(drum_guitarinc,44100);
endfunction


